paths:
 /api/users/signup:
  post:
   summary: Register a new user
   tags:
    - User
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/RegisterUserRequest'
   responses:
    '201':
     description: User registered successfully
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/UserResponse'
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'
 /api/users/login:
  post:
   summary: Login user
   tags:
    - User
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/LoginUserRequest'
   responses:
    '200':
     description: User logged in successfully
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/LoginResponse'
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'
 /api/users/search/{accountNumber}:
  get:
   summary: Search user by account number
   tags:
    - User
   parameters:
    - in: path
      name: accountNumber
      required: true
      schema:
       type: string
   responses:
    '200':
     description: User name found
     content:
      application/json:
       schema:
        type: object
        properties:
         name:
          type: string
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'
 /api/users:
  get:
   summary: Get all users
   tags:
    - User
   responses:
    '200':
     description: List of all users
     content:
      application/json:
       schema:
        type: array
        items:
         $ref: '#/components/schemas/UserResponse'
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'
 /api/users/{id}:
  get:
   summary: Get a user by ID
   tags:
    - User
   parameters:
    - in: path
      name: id
      required: true
      schema:
       type: string
   responses:
    '200':
     description: User details
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/UserResponse'
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'
  put:
   summary: Update a user
   tags:
    - User
   parameters:
    - in: path
      name: id
      required: true
      schema:
       type: string
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/UpdateUserRequest'
   responses:
    '200':
     description: User updated successfully
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/UserResponse'
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'
  delete:
   summary: Delete a user
   tags:
    - User
   parameters:
    - in: path
      name: id
      required: true
      schema:
       type: string
   responses:
    '204':
     description: User deleted successfully
    '400':
     $ref: '#/components/responses/BadRequest'
    '401':
     $ref: '#/components/responses/Unauthorized'
    '404':
     $ref: '#/components/responses/NotFound'
    '500':
     $ref: '#/components/responses/InternalServerError'

components:
 schemas:
  RegisterUserRequest:
   type: object
   required:
    - name
    - email
    - password
   properties:
    name:
     type: string
    email:
     type: string
    password:
     type: string
  LoginUserRequest:
   type: object
   required:
    - email
    - password
   properties:
    email:
     type: string
    password:
     type: string
  UpdateUserRequest:
   type: object
   properties:
    name:
     type: string
    email:
     type: string
  UserResponse:
   type: object
   properties:
    id:
     type: string
    name:
     type: string
    email:
     type: string
    accounts:
     type: array
     items:
      $ref: '#/components/schemas/AccountResponse'
  LoginResponse:
   type: object
   properties:
    message:
     type: string
    token:
     type: string
  AccountResponse:
   type: object
   properties:
    id:
     type: string
    accountNumber:
     type: string
    balance:
     type: number
  ErrorResponse:
   type: object
   properties:
    error:
     type: string
    message:
     type: string

 responses:
  BadRequest:
   description: Bad request
   content:
    application/json:
     schema:
      $ref: '#/components/schemas/ErrorResponse'
  Unauthorized:
   description: Unauthorized
   content:
    application/json:
     schema:
      $ref: '#/components/schemas/ErrorResponse'
  NotFound:
   description: Not found
   content:
    application/json:
     schema:
      $ref: '#/components/schemas/ErrorResponse'
  InternalServerError:
   description: Internal server error
   content:
    application/json:
     schema:
      $ref: '#/components/schemas/ErrorResponse'
